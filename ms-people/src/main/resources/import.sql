-- BEGIN: This UUID part Work!
--CREATE TRIGGER TRIG_ROLES BEFORE INSERT ON ROLE_SECURITIES REFERENCING NEW ROW AS NEW_ROLE FOR EACH ROW SET NEW_ROLE.ID = UUID();
--CREATE TRIGGER TRIG_AUTHORITIES BEFORE INSERT ON AUTHORITY_SECURITIES REFERENCING NEW ROW AS NEW_AUTHORITY FOR EACH ROW SET NEW_AUTHORITY.ID = UUID();
-- END: This UUID part Work!

INSERT INTO ROLE_SECURITIES (id, name) VALUES(UUID(), 'ADMIN');
INSERT INTO ROLE_SECURITIES (id, name) VALUES(UUID(), 'USER');
INSERT INTO ROLE_SECURITIES (id, name) VALUES(UUID(), 'GUEST');

INSERT INTO AUTHORITY_SECURITIES (id, authority) VALUES(UUID(), 'READ_ALL');
INSERT INTO AUTHORITY_SECURITIES (id, authority) VALUES(UUID(), 'READ_SELF');
INSERT INTO AUTHORITY_SECURITIES (id, authority) VALUES(UUID(), 'CREATE');


INSERT INTO ROLE_AUTHORITY_MAPPING (authority_id, role_id) VALUES ( (SELECT id FROM AUTHORITY_SECURITIES WHERE authority = 'READ_ALL'),(SELECT id FROM ROLE_SECURITIES WHERE name = 'ADMIN'));
INSERT INTO ROLE_AUTHORITY_MAPPING (authority_id, role_id) VALUES ( (SELECT id FROM AUTHORITY_SECURITIES WHERE authority = 'READ_SELF'),(SELECT id FROM ROLE_SECURITIES WHERE name = 'ADMIN'));

INSERT INTO ROLE_AUTHORITY_MAPPING (authority_id, role_id) VALUES ( (SELECT id FROM AUTHORITY_SECURITIES WHERE authority = 'READ_SELF'),(SELECT id FROM ROLE_SECURITIES WHERE name = 'USER'));

INSERT INTO ROLE_AUTHORITY_MAPPING (authority_id, role_id) VALUES ( (SELECT id FROM AUTHORITY_SECURITIES WHERE authority = 'CREATE'),(SELECT id FROM ROLE_SECURITIES WHERE name = 'GUEST'));



SELECT id FROM AUTHORITY_SECURITIES WHERE authority = 'READ_ALL';
SELECT id FROM ROLE_SECURITIES WHERE name = 'ADMIN';

--CREATE FUNCTION find_authority_id(IN arg VARCHAR(10)) RETURNS UUID READS SQL DATA BEGIN ATOMIC DECLARE outID UUID; SELECT id INTO outID FROM AUTHORITY_SECURITIES WHERE authority = arg; RETURN outID; END;

--CREATE FUNCTION find_role_id(IN arg VARCHAR(10)) RETURNS UUID READS SQL DATA BEGIN ATOMIC DECLARE outID UUID; SELECT id INTO outID FROM ROLE_SECURITIES WHERE name = arg; RETURN outID; END;

--INSERT INTO ROLE_AUTHORITY_MAPPING (authority_id, role_id) VALUES (find_authority_id('READ_ALL'), find_role_id('ADMIN'));

--INSERT INTO ROLE_AUTHORITY_MAPPING (authority_id, role_id) SELECT sa.id AS authority_id, sr.id AS role_id FROM AUTHORITY_SECURITIES sa JOIN ROLE_SECURITIES sr ON sr.name = 'USER' WHERE sa.authority = 'READ_SELF';

SELECT ue.id, us.id FROM USER_ENTITIES ue JOIN USER_SECURITIES us ON us.id = us.id;